{
  "epics": [
    {
      "title": "Project Setup & Scaffolding",
      "user_stories": [
        {
          "title": "As a developer, I want a clean, minimal scaffold so I can iterate fast.",
          "tasks": [
            "Initialize project repo and directory structure",
            "Set up environment variables or .env",
            "Create base folders: routes/, models/, views/, components/",
            "Set up mock database (Supabase, Firebase, or JSON Server)"
          ]
        }
      ]
    },
    {
      "title": "Admin Management of Society",
      "user_stories": [
        {
          "title": "As an admin, I want to create and manage flats and residents.",
          "tasks": [
            "Create flats model and routes",
            "Add endpoint to add/edit flat details (block, number, type)",
            "Create users model with roles (admin, resident)",
            "Assign resident to a flat"
          ]
        },
        {
          "title": "As an admin, I want to generate maintenance invoices per flat.",
          "tasks": [
            "Create maintenance_invoices model and schema",
            "Add route to generate invoice (flat ID, amount, due date)",
            "View list of invoices per flat",
            "Toggle payment status manually"
          ]
        }
      ]
    },
    {
      "title": "Resident Portal",
      "user_stories": [
        {
          "title": "As a resident, I want to view my maintenance dues.",
          "tasks": [
            "Create route to fetch maintenance invoices by flat ID",
            "Display dues and payment status in UI",
            "Show due amount and due date"
          ]
        },
        {
          "title": "As a resident, I want to raise complaints about services.",
          "tasks": [
            "Create complaints model and schema",
            "Add form to submit new complaint (category, description)",
            "View submitted complaints with status (open/in progress/resolved)"
          ]
        }
      ]
    },
    {
      "title": "Communication and Notices",
      "user_stories": [
        {
          "title": "As an admin, I want to post announcements for all residents.",
          "tasks": [
            "Create announcements model and route",
            "UI form to post announcement (title + body)",
            "Residents can view announcements in a noticeboard UI component"
          ]
        }
      ]
    },
    {
      "title": "Frontend Integration & Routing",
      "user_stories": [
        {
          "title": "As a user, I want different dashboards for admin and resident views.",
          "tasks": [
            "Implement role-based routing logic",
            "Resident dashboard: dues, complaints, announcements",
            "Admin dashboard: invoices, residents, flats, complaints, announcements"
          ]
        },
        {
          "title": "As a user, I want basic session-like behavior for testing.",
          "tasks": [
            "Use localStorage or dummy login switch for role",
            "Persist role and basic user info across views"
          ]
        }
      ]
    },
    {
      "title": "QA & Feedback Loop",
      "user_stories": [
        {
          "title": "As a developer, I want to verify core flows through manual testing.",
          "tasks": [
            "Test resident login → view dues → submit complaint",
            "Test admin login → post invoice → resolve complaint",
            "Add console logs / alerts for key interactions",
            "Push to GitHub + optional deploy to Vercel / Firebase Hosting"
>>>>>>> aead4577ea64d595e4045e86556cb5ae5063e688
          ]
        }
      ]
    }
  ]
}
